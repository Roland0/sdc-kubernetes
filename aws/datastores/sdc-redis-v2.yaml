apiVersion: v1
kind: Service
metadata:
  name: sysdigcloud-redis
  labels:
    app: sysdigcloud
    role: redis
spec:
  ports:
    - port: 6379
      name: redis
  selector:
    app: sysdigcloud
    role: master
---
apiVersion: v1
kind: Service
metadata:
  name: sysdigcloud-redis-nodes
  labels:
    service: redis
spec:
  clusterIP: None
  ports:
    - port: 6379
      name: redis
  selector:
    name: redis-node
---
apiVersion: v1
kind: Service
metadata:
  name: sysdigcloud-redis-readonly
  labels:
    service: redis
spec:
  ports:
    - port: 6379
      name: redis
  selector:
    name: redis-node
    role: slave
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: sysdigcloud-redis
  namespace: sysdigcloud
spec:
  serviceName: sysdigcloud-redis-nodes
  replicas: 3
  selector:
     matchLabels:
        app: sysdigcloud
  template:
    metadata:
      labels:
        name: redis-node
        app: sysdigcloud
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        # Redis
        - name: redis-node
          image: redis:3.2
          command:
            - redis-server
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: sysdigcloud-redis-config
                  key: redis.password
          args:
            - /config/redis.conf
          ports:
            - name: redis
              containerPort: 6379
          volumeMounts:
            - name: data
              mountPath: /data
            - name: redis-config
              mountPath: /config
          resources:
            requests:
              cpu: 100m
              memory: 1Gi
          livenessProbe: &healthcheck
            exec:
              command: [ "redis-cli", "ping" ]
          readinessProbe:
            <<: *healthcheck

        # Sentinel
        - name: redis-sentinel
          image: redis:3.2
          command: [ "bash", "-c", "touch sentinel.conf && redis-sentinel sentinel.conf" ]
          ports:
            - name: sentinel
              containerPort: 26379
          resources:
            requests:
              cpu: 25m
              memory: 50Mi
          livenessProbe: &healthcheck
            exec:
              command: [ "redis-cli", "-p", "26379", "ping" ]
          readinessProbe:
            <<: *healthcheck

        # Sidecar
        - name: redis-sidecar
          image: commercialtribe/redis-sentinel-sidecar:v20170425.0
          imagePullPolicy: Always
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: pod-info
              mountPath: /etc/pod-info
          readinessProbe:
            exec:
              command: 
              - sh
              - -c
              - "cat /app/booted"
            initialDelaySeconds: 15
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 25m
              memory: 50Mi
      volumes:
        - name: pod-info
          downwardAPI:
            items:
              - path: labels
                fieldRef:
                  fieldPath: metadata.labels
        - name: redis-config
          configMap:
            name: sysdigcloud-redis-config
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      storageClassName: aws-gp2-multi-az
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi